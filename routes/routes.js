const Router = require('express').Router()
const validator = require('../config/validator')
const passport = require('../config/passport')

const {newAdmin,signUpUser,logInUser,signOutUser,verifyEmail,verifyToken} = require('../controllers/userControllers')

Router.route('/auth/newAdmin')
    .post(validator,newAdmin)
Router.route('/auth/signUp')
    .post(validator,signUpUser)
Router.route('/auth/logIn')
    .post(logInUser)
Router.route('/auth/signOut')
    .post(signOutUser)
Router.route('/verify/:uniqueString')
    .get(verifyEmail)
Router.route('/auth/loginToken')
    .get(passport.authenticate('jwt', {session:false}), verifyToken)

const {getWines,getTypeWines,oneWine,uploadWine,deleteWine,modifyInfoWine,modifyStockWine} = require('../controllers/wineControllers')

Router.route('/wines')
    .get(getWines)
    .post(uploadWine)
Router.route('/types/:id')
    .get(getTypeWines)
Router.route('/wines/:id')
    .delete(deleteWine)
    .put(modifyInfoWine)
    .get(oneWine)
Router.route('/stock/:id')
    .put(modifyStockWine)

const {addProduct,modifyProduct,deleteProduct,getUserBasket,getBuy,getOld} = require('../controllers/basketControlers')

Router.route('/basket')
    .get(passport.authenticate('jwt', {session: false}), getUserBasket)
    .post(passport.authenticate('jwt', {session: false}), addProduct)
    .put(passport.authenticate('jwt', {session: false}), modifyProduct)
Router.route('/basket/:id')
    .post(passport.authenticate('jwt', {session: false}), deleteProduct)
Router.route('/buyBasket')
    .get(passport.authenticate('jwt', {session: false}), getBuy)
Router.route('/oldBasket')
    .get(passport.authenticate('jwt', {session: false}), getOld)

module.exports = Router